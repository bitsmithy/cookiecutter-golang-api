#!/usr/bin/env bash

# Semantic versioning details: https://semver.org/
# Constants
VERSION_FILE="$(git rev-parse --show-toplevel)/.version"
CURRENT="current"
NEXT_PATCH="next-patch"
NEXT_MINOR="next-minor"
NEXT_MAJOR="next-major"
WRITE=0

usage() {
  echo "Usage: ${0} [-w] < ${CURRENT} | ${NEXT_PATCH} | ${NEXT_MINOR} | ${NEXT_MAJOR} >"
  exit 1
}

commit_and_tag() {
  git add "${VERSION_FILE}"
  git commit -m "Bumping version file to ${NEXT}"
  git tag "${NEXT}"
}

if [ "$1" == "-w" ]; then
  export WRITE=1
  shift
fi
#
# Command line arguments.
TYPE="${1}"
if [ "${TYPE}" != ${CURRENT} ] && [ "${TYPE}" != ${NEXT_PATCH} ] && [ "${TYPE}" != ${NEXT_MINOR} ] && [ "${TYPE}" != ${NEXT_MAJOR} ]; then
  usage
fi

# Create version file if it doesn't exist
if [ ! -f "${VERSION_FILE}" ]; then
  NEXT="0.1.0"
  {
    echo "# DO NOT TOUCH THIS FILE",
    echo "# This file is managed by the \`scripts/semver\` script"
    echo "# and automatically versions the build of this project when releasing"
    echo "# using \`make build\` or \`make release\`"
    echo ""
    echo "${NEXT}"
  } >"${VERSION_FILE}"
  commit_and_tag
  exit 0
else
  VERSION=$(tail -n1 "${VERSION_FILE}")
  version_patch=$(echo "${VERSION}" | grep -Eo "[0-9]+$")
  version_minor=$(echo "${VERSION}" | grep -Eo "[0-9]+\.[0-9]+$" | grep -Eo "^[0-9]+")
  version_major=$(echo "${VERSION}" | grep -Eo "^[0-9]+")

  if [ "${TYPE}" = ${CURRENT} ]; then
    echo "${version_major}.${version_minor}.${version_patch}"
    exit 0
  elif [ "${TYPE}" = ${NEXT_PATCH} ]; then
    (("version_patch=version_patch+1"))
  elif [ "${TYPE}" = ${NEXT_MINOR} ]; then
    version_patch=0
    (("version_minor=version_minor+1"))
  elif [ "${TYPE}" = ${NEXT_MAJOR} ]; then
    version_patch=0
    version_minor=0
    (("version_major=version_major+1"))
  fi

  NEXT="${version_major}.${version_minor}.${version_patch}"

  if [ "${WRITE}" == "1" ]; then
    printf %s\\n "\$s/.*/${NEXT}/" w | ed -s "${VERSION_FILE}"
    commit_and_tag
  fi

  echo "${NEXT}"
fi
